#coding:utf-8
import pymysql
from colorama import init,Fore
init(autoreset=True)
import time

#pymysql连接数据库,并得到游标对象cu
conn=pymysql.connect(host='localhost',port=18283,user='lpet6plus',passwd='LPET6Plus',db='lpet6plusdb',charset='utf8')
cu=conn.cursor()

#变量区
biao_list=[]
dic1_maintain={}
dic1_list={}
tmp_id=[]
dic2_list={}
dic2_maintain={}
tmp1=[]
difference_elements=[]
delta=0

#先得到包含所有表名的列表
field_chinese={'sys_metercardtype':['自增ID','主ID','状态','创建时间','修改时间','创建者','已上传','名称','销售提成','服务提成','备注'],'his_metercard':['自增ID','主ID','状态','创建时间','修改时间','创建者','已上传','计次卡类别MID','卡号','卡类别名称','过期日期','发卡日期','剩余次数','操作人员','操作人员名','备注','顾客mid'],'his_metercard_detail':['自增ID','主ID','状态','创建时间','修改时间','创建者','已上传','计次卡MID','记录类型','金额','次数变动值','销售人员Mid','销售人员','服务人员Mid','服务人员','本次服务提成','当时剩余次数','备注'],'his_time_card_log_delete':['自增ID','主ID','状态','创建时间','修改时间','创建者','已上传','卡MID','操作类型','开卡时间','本次使用多少次','卡内还剩多少次','充值钱数','操作人员','操作人员名称','服务人员','备注'],'his_time_card_delete':['自增ID','主ID','状态','创建时间','修改时间','创建者','已上传','宠物MID','卡名称','开卡时间','可使用次数','已使用资料','备注'],'sys_queue':['ID','表名','时间Mid','操作类型','创建时间','描述'],'his_consumption':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','父表mid','宠物mid','主人mid','结算mid','销售人员mid','销售人员名称','服务人员mid','服务人员名称','消费设置mid','消费名称','消费打印名称','消费项目编号','消费项目条形码','计量单位','规格','所属类型','厂家','价格','折扣','实际成交价','数量','用法','用量','排序字段','备注','事件type','发生时刻','状态','处方编组','是否计算库存','详情mid','是否打折'],'his_bill':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','宠物mid','主人mid','出入库单mid','操作员mid','操作员mid','结算单号','账单类型','账单状态','合计金额','折扣','实际支付','抹零金额','优惠金额','账单时间','支付时间','备注','顾客名','宠物名','顾客手机','次卡记数'],'his_bill_pay':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','账单mid','支付方式快照名称 ','支付方式mid','会员卡记录mid','资金流mid','支付金额','备注'],'his_consumer':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','编号','姓名','姓名拼音','年龄','性别','手机','电话','地址','等级','押金余额','备注','登记时间'],'his_pet':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','主人mid','种类','种类mid','宠物种类mid','编号','姓名','姓名拼音','生日','性别','体重','体温','心率','毛色','死亡标记','是否免疫','绝育去势','驱虫标记','登记日期','备注','过敏史','头像','状态','状态发生时间'],'his_notice':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','关联信息mid','通知标题','内容','通知类型','通知状态','外链地址','通知日期','查看时间'],'his_record':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','宠物mid','主人mid','住院mid','医生mid','医生','病历日期','诊疗科目','病症分类','体温','体重','呼吸','心率','主诉记录','检验分析','护理记录','处理记录','医嘱','疑似病例','病历状态'],'his_beauty':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','宠物mid','主人mid','病历日期','编号','名称','销售人员','服务人员','备注'],'his_time_card_log':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','卡mid','操作类型','开卡时间','本次使用多少次','卡内还剩多少次','充值钱数','服务人员','操作人员名称','服务人员','备注'],'his_time_card':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','宠物mid','卡名称','开卡时间','可使用次数','已使用资料','备注'],'his_protection':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','宠物mid','主人mid','病历日期','编号','名称','销售人员','服务人员','备注'],'his_hospitalization':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','宠物mid','主人mid','医生mid','医生名称','病情分类','住院日期','出院日期','住院状态','备注'],'his_hospitalization_daily':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','住院mid','消费设置mid','消费名称','消费打印名称','消费项目编号','消费项目条形码','计量单位','规格','所属类型','厂家','价格','折扣','实际成交价','数量','用法','用量','排序字段','包含首日','备注'],'his_hospitalization_consumption':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','住院mid','汇总的消费日期'],'his_foster':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','宠物mid','主人mid','医生mid','医生名称','起始日期','结算日期','住院状态','备注'],'his_foster_daily':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','寄养mid','消费设置mid','消费名称','消费打印名称','消费项目编号','消费项目条形码','计量单位','规格','所属类型','厂家','价格','折扣','实际成交价','数量','用法','用量','排序字段','包含首日','备注'],'his_foster_consumption':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','寄养mid','汇总的消费日期','备注'],'his_card':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','卡号','云端卡mid','主人mid','卡类型','余额','积分','折扣','卡类型mid'],'his_card_detail':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','会员卡mid','事件类别','发生时间','发生事件','金额','积分','备注'],'his_card_detail_pay':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','支付方式快照名称 ','支付方式mid','会员卡记录mid','资金流mid','支付金额','备注'],'his_deposit_detail':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','主人','事件类别','发生时间','发生事件','押金金额','备注'],'his_appointment':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','宠物','宠物','宠物','主人','主人','主人','主人电话','提醒类别','提醒来源,是从哪里添加的','提醒对像,可以是专家主键','提醒对像,可以是专家名称','名称','提醒时间','提醒内容','执行时间','状态','短信发送次数','微信发送次数','是否到期自动微信提醒','是否到期自动短信提醒','备注'],'his_hospital_focus':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','宠物','主人','状态类型','状态名称','宠物名','相关时间','宠物编号','主人名','当日未结消费','备注'],'his_examine':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','检验记录项mid','化验人员','化验人员','检验单号','检验报告'],'his_examine_result':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','业务明细表','相关文件','结果类型','操作员','操作员','检验项结果','检验项名称','检验标准名称','检验项目单位','检验最高值','检验最低值','检查项备注','备注'],'his_pet_room_log':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','房间mid','房间编号','房间类型','收费标准','入住相关类型mid','入住相关类型','备注'],'his_pet_room':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','房间编号','房间类型','收费标准','入住相关类型mid','入住相关类型','备注'],'his_file':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','类别','文件名','标识','md5','扩展名','容量','文件二进制','存储路径','文件类型'],'g_stockio':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','往来单位','销售人员','往来单位名称','销售人员名称','编号','类型','类型名称','是否结算完毕','系数','业务日期','备注'],'g_stockio_detail':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','出入库单','消费项目表','多单位mid','消费名称','消费打印名称','消费项目编号','消费项目条形码','计量单位','规格','品牌','批次','有效日期','价格','折扣','实际成交价','数量','实际单位','多单位比例','排序字段','备注','当时库存（变动后）','当时成本价(变动后)'],'g_company':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','往来单位名称','地址','0：客户,1：供应商,2：两者皆是','联系人名称','联系人手机','银行','银行卡号','欠款','欠款额度','预收款余额','预付款余额','描述'],'g_stockbill':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','往来单位名称','往来单位','单号','总金额','支付金额','发生时间','系数','描述','类型','操作员mid','操作原名'],'g_stockbill_detail':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','往来结算mid','出入库单','结算金额','描述'],'g_stockbill_pay':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','往来结算','支付方式','资金流','金额','备注','父表mid'],'g_stock':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','消费项目表','数量','批号','有效期','成本价'],'g_stock_costprice':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','消费项目表','年份','月份','成本价','当月库存','当月入库数','上月结存成本','上月结存库存'],'g_funds':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','编号','往来单位mid','款项类型（预收或预付）','操作类型','系数','操作金额','余额','备注'],'g_funds_pay':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','预收预付','支付方式','系数','资金流','金额','备注'],'c_cashflow':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','支付方式','金额','类型','类型名称','备注','发生时间'],'c_public_pay':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','父表mid','父表类型枚举','支付方式枚举','资金流mid','系数,1或-1','金额','备注','时间','相关记录mid'],'c_balance':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','资产类别','资产增加值','资产名称','负债类别','负债名称','负债增加值','事件名称','备注'],'c_charge':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','编号','发生时间','支出或收入','支出类型','摊销支付开始时间','摊销支付结束时间','用途','系数','操作金额','备注'],'c_charge_pay':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','收入支出mid','支付方式','系数','资金流','金额','备注'],'c_profit':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','类型'],'con_commodity':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','商品分类','业务类型','业务类型名称','编号','条形码','名称','拼音','打印名称','标准名称','标准代码','厂家','助记码','规格','单位','参考售价','参考进价','批发价格','最低售价','销售提成','服务提成','参与库存计算','参与折扣','有批号商品','过期日期','库存下限','使用说明','备注'],'con_commodity_unit':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','消费项目','单位名称','比例','售价','条码','备注'],'con_commodity_off':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','消费项目','卡类型','类型','折扣','价格'],'con_commoditygroup':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','套餐名称','业务类型','排序值','备注'],'con_commoditygroup_detail':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','套餐mid','消费设置mid','价格','数量','备注','事件type','排序字段','用法','用量','标记'],'con_commodityexamineitem':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','名称','标准名','单位','最高值','最低值','所属模板的父节点,分组使用。','备注'],'con_category':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','类别名称','父类别','业务类型','业务类型名称','排序字段'],'con_employee':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','员工图片','角色mid','编号','姓名','用户名','密码','手机','电话','备注'],'con_employee_permission':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','权限表mid','操作员mid','操作权限','查看权限'],'con_clinictemplet_class':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','操作员mid','病历模板大类名','排序字段','类别'],'con_clinictemplet_detail':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','模板大类mid','病历模板大类名','病历模板明细','排序字段','类别'],'sys_permission':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','模块名称','内容名称','备注'],'sys_hospital':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','医院名称','国家','省份','城市','地区','院长','地址','手机','电话','联系人','联系电话','注册码','是否授权','授权码','安装人','备注','省份id','城市id','地区id'],'sys_config':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','设置key','设置名称','设置值'],'sys_species':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','类别','拼音','大类','排序'],'sys_paytype':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','名称','类别','key','排序'],'sys_cardtype':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','名称','不使用','折扣','积分金额','积分','备注'],'sys_maintain':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','维护人员','维护内容'],'sys_role':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','名称','备注'],'wx_message':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','主人表','云端消息id号','消息详情','发送时间','本地接收时间','发送方向','已读取','消息类型'],'wx_group':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','消息内容','备注','接收人','发送时间'],'update_files':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','文件的md5','文件名','文件大小','文件字节正文'],'update_list':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','文件所属的升级版本','文件类型','发部日期','相对目录','文件md5'],'tpl_clinic':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','类型','名称','条目','内容','备注','用户mid'],'tpl_examination':['自增id','主id','状态','创建时间','修改时间','创建者','已上传','检验名称','标准名称','单位','最大值','最小值','年龄段, 幼年','成年','老年','宠物类别：如 猫类,狗类,其它之类的。','所属模板的父节点,分组使用','备注'],'style_report':['自增ID','主ID','状态','创建时间','修改时间','创建者','已上传','表名','大类','小类','条件','sql语句','内容','状态','排序','事件时间']}
cu.execute('SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = "lpet6plusdb"')
biao_name_init=cu.fetchall()
for i in range(len(biao_name_init)):
	if biao_name_init[i][0]=='sys_queue' or biao_name_init[i][0]=='update_files' or biao_name_init[i][0]=='sys_config' or biao_name_init[i][0]=='style_report':
		pass
	else:	
		biao_list.append(biao_name_init[i][0])
#建立维护表
for i1 in range(len(biao_list)):
	cu.execute('select * from %s order by id'%biao_list[i1])
	tmp=cu.fetchall()
	dic1_maintain[biao_list[i1]]=list(tmp)

#再建立一个id表，到时候会先比较这个表，如果这个表中的id数量有变化，要先将dic1_maintain字典新增记录	
for i2 in range(len(biao_list)):
	cu.execute('select id from %s'%biao_list[i2])
	tmp=cu.fetchall()
	for i3 in range(len(tmp)):
		tmp_id.append(tmp[i3][0])
	dic1_list[biao_list[i2]]=tmp_id
	tmp_id=[]
	
#检测如果有新记录则先将新记录放入维护表再比较
while 1:#注意要反复的新建连接
	conn=pymysql.connect(host='localhost',port=18283,user='lpet6plus',passwd='LPET6Plus',db='lpet6plusdb',charset='utf8')
	cu=conn.cursor()
	for i2 in range(len(biao_list)):
		cu.execute('select id from %s'%biao_list[i2])
		tmp=cu.fetchall()
		for i3 in range(len(tmp)):
			tmp_id.append(tmp[i3][0])
		dic2_list[biao_list[i2]]=tmp_id
		tmp_id=[]
#要先比较id,后取临时表，因为如果先取临时表，如果id比较有新增，则会向维护表dic1_maintain插入数据,此时维护表1和临时表2的记录数是不一样的，咱们要的是记录数相同，只是比较表中不同的字段	
#比较id并决定是否要向dic1_maintain里面插入新记录
	for i in range(len(biao_list)):
		if dic1_list[biao_list[i]]==dic2_list[biao_list[i]]:
			pass
		else:
			new=[x for x in dic2_list[biao_list[i]] if x not in dic1_list[biao_list[i]]]
			for i4 in range(len(new)):
				cu.execute('select * from %s where id=%s'%(biao_list[i],new[i4]))
				tmp=cu.fetchall()
				dic1_maintain[biao_list[i]].append(tmp[0])
				dic1_list[biao_list[i]].append(new[i4])
#				print(1)
#				print(dic1_maintain[biao_list[i]])
#				print(dic2_maintain[biao_list[i]])
#				print(dic1_list)
#				print(dic2_list)
				
		
#下面该引入dic2_maintain，并作比较了
	for i1 in range(len(biao_list)):
		cu.execute('select * from %s order by id'%biao_list[i1])
		tmp=cu.fetchall()
		dic2_maintain[biao_list[i1]]=list(tmp)
	for i in range(len(biao_list)):	
		if dic1_maintain[biao_list[i]]==dic2_maintain[biao_list[i]]:
			pass
		else:
#如果两个表的记录内容不一样，则要深表中具体看到是哪一条记录不对,找到有不同的记录，再深入到该记录找到具体不同的字段,然后以一条记录为单位输出原内容与改后内容,再维护dic1_maintain表,再看该表的其它记录，循环过程	
			for i5 in range(len(dic1_maintain[biao_list[i]])):
				if dic1_maintain[biao_list[i]][i5]==dic2_maintain[biao_list[i]][i5]:
					pass
				else:
					for i6 in range(len(dic1_maintain[biao_list[i]][i5])):
						if dic2_maintain[biao_list[i]][i5][i6] not in dic1_maintain[biao_list[i]][i5]:
							difference_elements.append(dic2_maintain[biao_list[i]][i5].index(dic2_maintain[biao_list[i]][i5][i6]))	
					if difference_elements!=[]:	
						print('表'+Fore.GREEN+str(biao_list[i]),end='')
						print('有字段发生改变')
						for i7 in range(len(dic1_maintain[biao_list[i]][i5])):
							if i7 in difference_elements:
#								打印带有颜色的
					
								print(str(field_chinese[biao_list[i]][i7])+':'+Fore.RED +str(dic1_maintain[biao_list[i]][i5][i7]),end='')
								print('	'+str(field_chinese[biao_list[i]][i7])+':'+Fore.RED +str(dic2_maintain[biao_list[i]][i5][i7]))
#								维护表在这维护
								dic1_maintain[biao_list[i]][i5]=list(dic1_maintain[biao_list[i]][i5])
						
								dic1_maintain[biao_list[i]][i5][i7]=dic2_maintain[biao_list[i]][i5][i7]
								dic1_maintain[biao_list[i]][i5]=tuple(dic1_maintain[biao_list[i]][i5])
							
							else:	
								print(str(field_chinese[biao_list[i]][i7])+':'+str(dic1_maintain[biao_list[i]][i5][i7])+'	'+str(field_chinese[biao_list[i]][i7])+':'+str(dic2_maintain[biao_list[i]][i5][i7]))
						print('*'*50)
						print(delta)
						delta=delta+1
					difference_elements=[]
				