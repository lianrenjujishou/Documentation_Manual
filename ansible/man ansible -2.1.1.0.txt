NAME
    ansible - 在目标主机上运行一个任务

SYNOPSIS
    ansible <host-pattern> [-m module_name] [-a args] [options]

DESCRIPTION
    Ansible对于在远程机器上做一些事情来说(如在远程机器上执行命令),是一个极其简单的工具/框架/API.这是允许一个'单任务剧本'运行的特殊(adhoc)命令.

ARGUMENTS
    host-pattern
	inventory文件中的一个组名,在inventory文件中选择主机一个类shell通配符或者是任何两个由逗号分开的混合.

OPTIONS
    -a 'ARGUMENTS', --args='ARGUMENTS'
	传递给模块的参数,一般是-m指定模块,-a指定传给该模块的参数

    -b, --become
	使用权限提升(特定的一个取决于become_method),这不意味着会提示你输密码

    -K, --ask-become-pass
	请求提权密码

    -k, --ask-pass
	提示输入ssh连接密码,如果需要的话(原文应译为如果对于被使用的传输需要的话).例如,没有使用基于秘钥的连接(就是平时说的没有设置免密码登录),就要有该选项,用来输入与ssh连接的密码	

    --ask-su-pass
	提示输入su密码,此选项和--su一起使用(--su就是-S)(不建设使用,建设用become).

    --ask-sudo-pass
	和--sudo一起使用,如果需要的话输入密码(首先使用sudo说明你当前用户要在sudoers文件里,否则是用不了的;再有不是sudo就一定要输入当前用户的密码,像树莓派的debian,sudo就不要密码;再有sudo执行命令和切换到root直接用root用户执行还不一样,至少二者的环境变量就不同)

    --ask-vault-pass
	提示输入vault密码(我也不知道valut password翻译成啥)
    
    -B NUM, --background=NUM
	在后台运行命令,并且在NUM后后将任务杀死

    --become-method=BECOME_METHOD
	使用的提权方法(默认=sudo),有效的选项有:[sudo|su|pbrun|pfexec|runas|doas|dzdo]

    --become-user=BECOME_USER
	以BECOME_USER的身份运行命令(默认=root)

    -C, --check
	不对远程机器做任何的改变,但是会测试资源看看什么被改变了,注意这个选项不会扫描所有可能的资源类型,仅仅是一个模拟

    -c CONNECTION, --connection=CONNECTOIN
	使用的连接类型.最常用的选项是paramiko(SSH),ssh,winrm和local.local对于定时任务(crontab)和kickstarts(这个单词不知翻译成啥)来说是非常有用的

    -e EXTRA_VARS, --extra-vars='EXTRA_VARS(文档就写了半个单引号,错了?)
	注入到playbook中的额外变量,用key=value
key=value的格式或者以被引号引起来的YAML/JSON(哈希和数组).为了从一个文件中加载变量,可以在指定的文件前面加上@(例如@vars.yml)

    -f NUM, --forks=NUM
	并行的级别,NUM被指定为一个整数,默认值是5

    -h, --help
	显示帮助信息并退出

    -i PATH, --inventory=PATH
	inventory文件的绝对路径,默认是/etc/ansible/hosts.你还可以选择使用由逗号分隔的主机列表或者带有逗号拖尾的单个主机.

    -l SUBSET, --limit=SUMSET
	进一步的限制被选择的主机/组模式.你可以在它前面加上前缀~来表示该模式是一个正则(这里的pattern翻译为样式是不是可以和regex的正则区分开呢,因为平时所说的模式一般指的就是正则)

    --list-hosts
	输出一个被匹配到的主机列表,不执行其它的东西了

    -m NAME, --module-mane=NAME
	执行名为NAME的模块

    -M DIRECTORY, --module-path=DIRECTORY
	指定被加载的模块存放的文件夹(DIRECTORY),默认是/usr/share/ansible.这个选项也可以使用ANSIBLE_LIBRARY环境变量设置.

    -o, --one-line
	试着将所有的东西输出到一行(执行命令后返回的数据一般也是一行行的文本流的形式,实际执行时,它就是将文本流中的换行给去掉了)

    -P NUM, --poll=NUM
	每NUM秒执行一次后台任务的轮询.需要与-B选项一起使用

    --private-key=PRIVATE_KEY_FILE
	使用PRIVATE_KEY_FILE文件来认证连接

    -S, --su
	和su一起执行操作(不建设使用,建设使用become)

    -R SU_USER, --se-user=SUDO_USER
	和su一起使用并以SU_USER的身份运行(默认=root)(不建议使用,建议使用become)

    -s, --sudo
	以被-u指定的用户运行命令并且sudo以root权限执行

    --ssh-common-args='-o ProxyCommand="ssh -W %h:%p ..." ...'
	添加指定的参数到任意sftp/scp/ssh命令行.对于设置一个代理命令去使用一台跳转机器是有用的,但是被这三个程序的接受的任意参数都可以被指定.

    --sftp-extra-args='-f ...'
	添加指定的命令到任意一个sftp命令行

    --scp-extra-args='-l ...'
	添加指定的命令到任意scp命令行

    --ssh-extra-args='-R ...'
	添加指定的命令到任意ssh命令行

    -U SUDO_USERNAME, --sudo-user=SUDO_USERNAME
	对sudoers中的用户SUDO_USERNAME执行sudo(也是猜的,即如果当前用户yang在sudoers里,则执行apt-get install命令时相当于sudo apt-get install)

    -t DIRECTORY, --tree=DIRECTORY
	保存目录在这个输出DIRECTORY,并且保存的文件以主机进行命名(猜的,比如有两个ip:1.1.1.1和2.2.2.2则对1.1.1.1的相应内容保存在DIRECTORY这个文件夹里文件名为1.1.1.1,2.2.2.2同理)

    -T SECONDS, --timeout=SECONDS
	当尝试和一个主机进行连接的超时时间,单位是秒

    -u USERNAME, --user=USERNAME
	使用USERNAME登录到目标主机,而不是使用本地当前用户

    --vault-password-file=VAULT_PASSWORD_FILE
	在vault加密文件解的过程中被使用的vault密码所在文件.要确保这个文件一直是安全的,如果这个文件被使用.如果这个文件是可执行的,则它将会被运行并且运行后的输出将被作为密码.

    -v, --verbose
	冗余模式,对于成功的动作有更多的输出被显示.如果给定三个v,-vvv则会有更多的输出(刚简单试了一下,只有-vvv多输出了东西,一个v与不加输出结果是一样的)	

    --version
	显示程序版本号并退出

INVENTORY
    Ansible将它可能要操作主机存储在一个inventory文件中,Inventory可以是一个类似于ini的文件,一个脚本,目录,或者是一个列表.ini的语法是一个主机占一行.分组也是被允许的,分组头部包含在它们自己的行,并且组名包含在方括号中,并且包含组名的方括号位于行的开始位置.

    使用范围表示一个范围的主机也是支持的.更详细的信息和额外的选项,参照http://docs.ansible.com/中的文档.

ENVIRONMENT
    下面的环境变量可以被指定.
    ANSIBLE_INVENTORY - 覆盖默认的主机文件(/etc/ansible/hosts)
    ANSIBLE_LIBRARY - 覆盖默认的ansible模块库路径(/usr/share/ansible/)
    ANSIBLE_CONFIG - 覆盖默认的ansible配置文件(/etc/ansible/ansible.cfg) 
    更多的有效选项可以看ansible.cfg文件内容

FILES
    /etc/ansible/hosts - 默认的inventory文件
    /usr/share/ansible/ - 默认的模块库(加载的模块都来这里找)
    /etc/ansible/ansible.cfg - 配置文件, 如果存在则使用它
    ~/.ansible.cfg - 用户配置文件,如果该文件存在的话会重写(覆盖默认的配置文件(/etc/ansible/ansible.cfg))

SEE ALSO
    ansible-playbook(1), ansible-pull(1), ansible-doc(1), ansible-vault(1),
ansible-galaxy(1)
