SPLIT(1)                    用户命令                         SPLIT(1)

NAME
	split - 将一个文件切割成多个小文件

SYNOPSIS
	split [OPTION]... [INPUT [PREFIX]]

DESCRIPTION
	将输入文件切割为固定大小的块并将这些块输出到PREFIXaa，PREFIXab,...;默认是1000行为一块,默认的PREFIX是'x'.如果没有INPUT,或者INPUT是_,则从标准输入读取(直接'split 文件'后,输出的文件名为xaa,xab,xac...)

	对于长选项来说是强制的参数对于短选项也一样,(这里长短选项指的是相同意思选项的长短书写形式)
	
-a, --suffix-length=N
	创建长度为N的后缀(默认长度是2)(注意,语法中的PREFIX是前缀,这个设定的是后缀;对于默认输出的名字xaa来说,PREFIX对应其中的x,本选项中的suffix对应于aa,如果'split -a 5 file',则文件名为xaaaaa,xaaaab,xaaaac,...)

--additional-suffix=SUFFIX
	追加一个额外的后缀到文件名(split -a 3 --additional-suffix=-yang则输出后的文件名为xaaa-yang,xaab-yang,xaac-yang...)

-b, --bytes=SIZE
	设置每个输出文件中的字节数(用这个选项的时候其实基础不好的人要小心,因为这涉及到当前编码使用几个字节来存汉字,如果当前编码是使用2个字节来存一个汉字,你整一个-b 名1,就会输出乱码了.这只是举个例子,所以使用该选项前自己要明白自己在做什么)

-C, --line-bytes=SIZE
	现在也感觉和-b一样,还没找出不同	

-d, --numeric-suffixes[=FROM]
	用数字形式的后缀代替字母形式的后缀;FROM设置起始值(默认的起始值是0)(即以后的分块文件名变为x00,x01,x02,x03,...;而非xaa,xab,xac,...)

-e, --elide-empty-files
	和-n参数使用,用于不创建空的输出文件

--filter=COMMAND
	pass

-l, --lines=NUMBER
	在每个文件中放NUMBER行,这个就是修改上文提到的那个默认1000行的参数

-n, --number=CHUNKS
	N:将文件字符均分在N个文件中,如果有余数将余数加在最后一个文件里
	K/N:如果将文件分成N块,则输出第K份,此参数不输出文件
	l/N:将文件分为N个小文件,但不能将行截断,具体看本上画的
	l/K/N:在不截断行的前提下将文件分为N份输出第K份,本参数不输出文件
	r/N:
	r/K/N:

-u, --unbuffered
	pass(和-n r/...一起使用立刻将输入拷贝到输出)

--verbose
	仅当每一个输出文件被打开前,打印一条诊断信息(这块要理解的话恐怕就要想想输出文件的创建流程了,打印的信息类似'正在创建文件"xaa"'之类)

--help
	显示帮助并退出

--version
	输出版本信息并退出

上文中提到的SIZE参数是一个整型参数,并且其后可以跟单位(可选,默认是byte)(如10K
是10*1024byte).单位可以为K,M,G,T,P,E,Z,Y(之前的关系是1024次幂)或者是KB,MB,...(之间的关系是1000次幂).(即如果不加单位,就只是指字节数,切割文件时严格按照每个文件指定字节数这么走,如果单位是K,M等不带B的,则各单位之间换算单位为1024,带B的换算单位为1000,但最后都要换算成字节的)

上文中提到的CHUNKS可以是:N,表示
下面举个例子来说明带有l的,即不打断行的输出是如何处理的?
--------------------------------------------------
前提是,我要处理的文件file有五行
,并且全都是字符1
,其中第一行是20个字符
,第二行45个字符
,第三四五行是65个字符
11111111111111111111
111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111
接下来,我输入了命令split -n l/10
file,按照事先想的,会在当前路径下生成10个文件,事实也生成了.此时我用wc -c
x*命令看一下这十个文件中的字符数,显示如下:
65 xaa
 0 xab
65 xac
 0 xad
 0 xae
65 xaf
 0 xag
65 xah
 0 xai
 0 xaj
260总用量
如果是split -n l/20生成20个文件后,我再用wc -c x*看一下这二十个文件中的字符数:
20 xaa
45 xab
 0 xac
 0 xad
 0 xae
65 xaf
 0 xag
 0 xah
 0 xai
 0 xaj
65 xak
 0 xal
 0 xam
 0 xan
 0 xao
65 xap
 0 xaq
 0 xar
 0 xas
 0 xat
260总用量
然后我就开始思考(其实还没有操作生成20个文件之前,我就想那10个件的生成规律来着,到底啥时候生成空文件,啥时候文件里又有内容?但一直没弄明白),到底是什么规律控制着输出的文件中是否有内容,或者说他是根据什么判断的,应该给第几个文件里面写内容,每几个文件里面应该是空呢?
：：见本上画的
