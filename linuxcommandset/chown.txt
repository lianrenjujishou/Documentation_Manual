CHOWN(1)                   User Commands                         CHOWN(1)

NAME
	chown-改变文件的拥有者和组

SYNOPSIS
	chown [OPTION]... [OWNER][:[GROUP]] FILE...
	chown [OPTION]... --reference=RFILE FILE...

DESCRIPTION
	这个手册记载了GNU版本的chown的相关内容.chown改变每一个被给出文件的用户和或组的所有权.如果仅仅是一个用户(一个用户名或是数字形式的用户ID)被给出,则每一个被给定文件的所属用户就变成了该用户,但文件所属组不改变.如果用户后面跟着一个冒号和一个组名(或是数字形式的组id),则文件的所属组也改变(OWNER冒号及GROUP之间没有空格).如果OWNER后面仅仅跟了冒号而冒号后没有跟着组名,则OWNER变为给定文件的所属用户,OWNER的登录组变成用户的所属组.如果冒号和GROUP被给出,但是OWNER没有给出,则仅仅将文件的所属组改为GROUP;在这种情况下,chown执行和chgrp相同的函数.如果仅仅给出了一个冒号,OWNER和GROUP都没有给出;或者连冒号都没有,则给定文件的所属用户及所属组都不会改变.

OPTIONS
	改变指定文件的属主和/或属组.--reference选项后面跟的是参照的文件名,表示将指定的文件的属主和属主更改为参照文件相同的的属主和属组.

    -c, --changes
        列出处理详情,但是仅仅是当文件的属主和或属组发生改变时才报告(打印信息)
    -f, --slient, --quiet
	抑制大多数的错误信息输出,即所谓的安静模式
    -v, --verbose
	为每一个被处理的文件输出一个诊段信息
    --dereference 影响每一个符号链接的指向(这是默认的),而不是符号链接自己(就是说我们在处理的时候这一个参数是默认加上去的,它的作用是如果我们指定要处理的文件是一个符号链接文件,则处理后影响的是它所链接到的那个文件)

    -h, --no-dereference
	这个参数和--dereference这个参数正好相反,如果碰上符号链接了,则就直接修改这个符号链接本身的属主及属组,而不影响它所链接到的文件(但这有一个前提,就是所在的系统要支持改变符号链接的所有权)
    --from=CURRENT_OWNER:CURRENT_GROUP
        刚一开始没弄明白它的用法,弄明白后觉得还是挺有用的,它的作用是:如果chown命令中加了这个参数,则在处理指定文件的属主和属组问题时要将指定文件的属主和或属组和from=后面给定的参数相比较,如果相同,则可以更改相应的属主和属组,如果不一样,则不允许更改属主和属组.(这么说太生硬不好理解,我举几个例子吧)
------------------------------------------------------------------------------
有一个文件a的属主属组信息如下:
文件名  属主   属组
a       root   root
再多说一句,前面语法中也给了指定属主和属组可以用'属主:属组'的形式,即冒号左右是属主,冒号右边是属组,好下面继续说,
使用--from=这个参数可以将语句给分成这么几部分:
主命令         参数                  修改后的所属                  文件
chown      --from=属主:属组          user:group                     a
在上面的几部分中需要注意的是--from=后的属主和属组,是和文件a当前的所属有关.也就是说命令执行后,会不会将文件现有的所属更改为'修改后的属性',首先会让--from后面的所属参数和文件a的现有所属去匹配,如果匹配上了,则同意将a的现有属性修改为指定的'修改后的所属'.这个匹配是很灵活的:
--from=root/--from=:root/--from=root:root对于上面的文件a来说这三种种况都能匹配上,
同样'修改后的所属'也是灵活的:
yang/:yang/yang:yang
--from=root/--from=:root/--from=root:root与yang/:yang/yang:yang可以随意组合.
从而也能看出来了,虽然有属主和属组两个属性呢,但是只要有其中一个能匹配上,就可以对文件的所属(包括属主和属组)进行任意修改了
chown --from=root yang a    可以将a的属主由root修改为yang,因为a的属主和--from=后面指定的匹配上了
chown --from=:root :yang a  可以将a的属组由root修改为yang,因为a的属组和--from=后面的匹配上了
chown --from=:root yang a   可以将a的属主由root修改为yang,因为a的属组和--from=后面的匹配上了,由此可以看出,不只是属主匹配上只能改属主,属组匹配上只能改属组,只要任意一个匹配上,你就可以对文件想改属主就改属主想改属组就改属
chown --from=root :yang a   可以将a的属主由root修改为yang,因为a的属主和--from=后面的匹配上了
对于--from=这个参数例子就举到这了,关键是要记住两点:1.参数的作用是在修改属性之前加把匹配的锁,看是否给定的参数能和要修改文件的相应所属匹配上,匹配上后你就可以修改文件属性了
                                                   2.如果在1的基础上匹配成功了,则后面你是就想修改属主,还是属主属组都想修改就看你自己了
说的不是很明白,--from=后面只给了属主,则你只需用这个属主参数去和a文件的属主匹配,匹配成功则锁开了，就可以进行下一步了,此时不用管属组如何
               --from=后面只给了属组,你只需用这个属组参数去和a文件的属组匹配,匹配成功则锁开了,就可以进行下一步了,此时不用管属主如何
               --from=后面属主属组都有的话,则必须是文件的属主和属组都匹配上锁才开,只有属主匹配成功,属组没成功或相反都不行
即参数给定的你给它全部匹配上了就行
------------------------------------------------------------------------------------
    --no-preserve-root
	不特殊对待'/'(默认也是这样的)
    --preserve-root
	在/下做递归(循环)会失败,它保护的只是不允许你在/下做递规操作,如果只是修改/下的单个文件还是没问题的
    --reference=RFILE
	使用RFILE所给定文件的属主及属组,而不是使用指定的OWNER:GROUP的值
    -R, --recursive
	递归操作文件及文件夹(这个基本上是对文件夹来说的,在这里就相当于可能不加该参数时，我只对文件夹本身做chown操作,但加上后,文件夹里面甚至更深层的文件也都会做chown操作)

    当-R选项被指定时,下面的选项修改等级是如何被穿过(遍历)的
    -H 
	如果一个命令行参数是一个目录的符号链接,则traverse it
*.暂时先将【命令行参数是一个目录】理解为:在输入命令的时候，要改变的目录是一个符号链接
    -L 
	对遇到的每一个目录的符号链接都traverse it
*.暂时先将【遇到的每一个目录】理解为在遍历一个目录时，该目录里面有目录是符号链接目录
    -P 
	不traverse任何的符号链接,这也是默认的
    --help 
	显示这个帮助并退出
    --version 
	输出版本信息并退出

在前面的SYNOPSIS中,如果OWNER没有给出,则不会修改给定文件的属主.如果给出了OWNER参数但GROUP参数没有给出,则不会修改给定文件的属组;但是如果OWNER后面跟着一个冒号的话,即使没有指定GROUP也会将给定文件的属组修改成当前登录到系统的用户的属组(刚看了一下说的是:那个用户的登录组,而没说当前登录的用户).OWNER和GROUP可以是数字型式的ID,也可以是普通的形式.

EXAMPLE
chown root /u 将/u的属主改为'root'

chown root:staff /u 将/u的属主改为root,属组改为staff

chown -hR root /u 将/u及/u的子文件属主改为'root'

**.最后自己总结一下用法吧,两点:
    1.最简单的情况下是'chown 新的属主 file2...'
    2.就是带参数的'chown 参数 文件...'
    3.具体的将1.2两点和前面的SYNOPSIS中写的对比自己想一下

**.--dereference,--no-dereference,-H,-L这四个参数单用都没有问题，且头两个参数侧重的是改变链接本身的所属(属主和或属组)还是改变链接文件所指向的内容的所属(属主或和属组),说到这尤其要注意的是，此刻如果链接指向的是一个文件，则改变的内容为链接文件或链接所指向的文件，这个没啥疑问!但是如果链接指向的是一个文件夹，此时要注意，改变的内容为链接文件或该文件夹的所属,与文件夹中的内容没一毛钱关系!而改变链接所指向文夹向里面的内容是参数-H和-L的职责.
