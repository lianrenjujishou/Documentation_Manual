1.vim在magic模式下除.和*外其它的元字符都需要用反斜杠转义!
magic下的元字符说明(重点要注意后面讲的贪婪模式与非贪婪模式):
*****************************************
贪婪模式	|       非贪婪模式
-----------------------------------------
* \{} \{0,}     |         \{-}
-----------------------------------------
\+ \{1,}        |         \{-1,}
-----------------------------------------
\? \= \{0,1}    |         \{-,1}
-----------------------------------------
\{n,m}          |         \{-n,m}
-----------------------------------------
\{n,}           |         \{-n,}
-----------------------------------------
\{,m}           |         \{-,m}
-----------------------------------------
\{n}            |         \{-n}
*****************************************
说明:[]中可以用-连接一个范围,如[0-9],表示匹配0-9任意一个数字,这里有必要说明一个,如果单独的去匹配[0-9]是会将文本中的所有数字都匹配上,如果是b[0-9]表示的是b后面接的单个字符是任意数字则都能匹配上,如b03456这个文本,应用b[0-9]匹配到的仅仅是b0而不是b03456;再有[^0-9]表示匹配除0-9外的其它任意字符,即在[]中开头加上^表示除^后的字符外全部匹配;最后再说一句,要弄清匹配的过程,是以单个字符为单位进行匹配的


下面的元字符就表示的一个范围,无贪婪与不贪婪之分:
*****************************************
元字符     |         含义
-----------------------------------------
\d         |       等价于[0-9]
-----------------------------------------
\D         |       等价于[^0-9]
-----------------------------------------
\x         |       等价于[0-9a-fA-F]
-----------------------------------------
\X         |      等价于[^0-9a-fA-F]
-----------------------------------------
\w         |      等价于[0-9a-zA-Z]
-----------------------------------------
\W         |      等价于[^0-9a-zA-Z]
-----------------------------------------
\t         |      匹配TAB键
-----------------------------------------
\s         |      等价于[空格+TAB键]
-----------------------------------------
\S         |      等价于[^空格+TAB键]
-----------------------------------------
\a         |      等价于[a-zA-Z]
-----------------------------------------
\A         |      等价于[^a-zA-Z]
-----------------------------------------
\l         |      等价于[a-z]
-----------------------------------------
\L         |      等价于[^a-z]
-----------------------------------------
\u         |      等价于[A-Z]
-----------------------------------------
\U         |      等价于[^A-Z]
*****************************************

又一批元字符:
\_.匹配包括换行在内的任一字符
\_s匹配空格或换行(别人叫断行符我觉得就是换行)
\_[]

^匹配行首
$匹配行尾

\<匹配单词词首
\>匹配单词词尾

\(content\)分组,后面可以用\n来引用前面分组的内容

删除[a,b][g]//d
说明:对于指定范围的替换也需要加全局的g

替换[%|a,b]s/old/new/[g]   
说明:%s/^/\=line(".")/g可以给每行前面加上行号,这个行号不是功能的显示行号而是作为文本插入到文本开头,这对于比较混乱的行要一批一批的处理比较有用,我先提取一批,这一批可能行不是都挨着的,所以给期每一批都处理完之后是不按顺序排着的,这时候如果前期我就将开头给替换成'行号+空格'的形式,后期我就可以根据它进行排序了,排完序再将'行号+空格'删掉.但是在一开始加行号的时候要注意是否有某些行就是以数字开头的,如果直接加的话最后删除的时候可能会删掉原文本中的数字(其实想多了,因为有空格作为分隔符,既使原文开头是数字也会被放在第二个元素中,我们提取的只是以空格为分隔符的第一个元素)
