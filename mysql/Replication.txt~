18章:复制(主从)
内容表(目录)
18.1 配置复制(主从)
  18.1.1 基于复制(主从)配制的二进制日志文件位置概述<再翻译>
  18.1.2 建立基于复制(主从)的二进制文件位置
    18.1.2.1 设置复制(主从)的主配置(配置文件?)
    18.1.2.2 为复制(主从)创建一个用户
    18.1.2.3 获取复制(主从)主二进制日志(日志文件?)的坐标(位置?)
    18.1.2.4 为数据快照选择一个方法
    18.1.2.5 建立复制(主从)的Slaves
    18.1.2.6 添加Slaves到一个复制(主从)环境
  18.1.3 用Global Transaction Identifiers做复制(主从)
    18.1.3.1 GTID概念
    18.1.3.2 使用GTIDs建立复制(主从)
    18.1.3.3 为了Failover(容错,失效备援(看失效备援的解释感觉像高可用))和Scaleout(水平扩展)来使用GTIDs
    18.1.3.4 使用GTIDs限制复制(主从)
  18.1.4 MySQL的多源复制(主从)
    18.1.4.1 MySQL多源复制(主从)概述
    18.1.4.2 多源复制(主从)教程
    18.1.4.3 从源复制(主从)监控
    18.1.4.4 多源复制(主从)错误信息
  18.1.5 改变线上服务器的复制(主从)的模式
    18.1.5.1 复制(主从)模式概念
    18.1.5.2 在线开启GTID会话(Transactions)
    18.1.5.3 在线禁用GTID会话(Transactions)
    18.1.5.4 验证匿名会话的复制(主从)
  18.1.6 复制(主从)与记录选项和变量的二进制<复制和二进制日志选项和变量?>
    18.1.6.1 复制和二进制日志选项和变量引用(参考?)
    18.1.6.2 复制(主从)Master选项和变量
    18.1.6.3 复制(主从)Slave选项和变量
    18.1.6.4 二进制日志选项和变量
    18.1.6.5 Global Transaction ID选项和变量
  18.1.7 普通的复制(主从)管理任务
    18.1.7.1 检查复制(主从)状态
    18.1.7.2 在Slave上停止复制(主从)
18.2 复制(主从)实现
  18.2.1 复制(主从)格式(格式化?)
    18.2.1.1 基于语句和基于行复制(主从)的优缺点
    18.2.1.2 基于行记录和复制(主从)的使用(基于行记录的使用和复制(主从)?)
    18.2.1.3 在二进制记录中安全与非安全语句的确定
  18.2.2 复制(主从)实现细节(详情?)
  18.2.3 复制(主从)通道
    18.2.3.1 在单通道上操作的命令
    18.2.3.2 和之前(版本?)的复制(主从)语句的兼容性
    18.2.3.3 启动选项和复制(主从)通道
    18.2.3.4 复制(主从)通道命令约定
  18.2.4 复制(主从)中继和状态日志
    18.2.4.1 Slave中继日志
    18.2.4.2 Slave状态日志
  18.2.5 Servers如何评估(衡量)复制(主从)过滤规则
    18.2.5.1 数据库级别的复制(主从)和二进制记录选项的评估(衡量)
    18.2.5.2 表级别的复制(主从)选项的评估(衡量?)
    18.2.5.3 复制(主从)规则应用
18.3 复制(主从)解决方案(方法)
  18.3.1 将复制(主从)用于备份
    18.3.1.1 使用mysqldump备份一个Slave
    18.3.1.2 从一个Slave备份Raw数据
    18.3.1.3 通过使它(这个它指的是数据库还是其它?)为只读来备份一个Master或是Slave
  18.3.2 处理一个复制(主从)Slave的一个不期望的停止
  18.3.3 和不同的Master复制(主从)及Slave存储引擎一起使用复制(主从)
  18.3.4 为了横向扩展(水平扩展)而使用复制(主从)
  18.3.5 不同的数据库到不同的Slaves的复制(主从)(复制(主从)不同的数据库到不同的Slaves?)
  18.3.6 提升复制(主从)的性能
  18.3.7 在容错(失效备援)时转换Masters
  18.3.8 为了使用安全连接而建立复制(主从)
  18.3.9 半同步复制(主从)
    18.3.9.1 半同步复制(主从)管理接口(可管理的接口?)
    18.3.9.2 半同步复制(主从)安装和配置
    18.3.9.3 半同步复制(主从)监控
  18.3.10 延迟复制(主从)
18.4 复制(主从)说明(注释)和技巧(小窍门)
  18.4.1 复制(主从)功能和问题
    18.4.1.1 复制(主从)和AUTO_INCREMENT
    18.4.1.2 复制(主从)和黑洞表
    18.4.1.3 复制(主从)和字符集
    18.4.1.4 复制(主从)和校验表
    18.4.1.5 IF NOT EXISTS...,CREATE...的复制(主从)
    18.4.1.6 SELECT语句CREATE TABLE的复制(主从)
    18.4.1.7 CREATE SERVER,ALTER SERVER和DROP SERVER的复制(主从)
    18.4.1.8 CURRENT_USER()的复制(主从)
    18.4.1.9 DROP... IF EXISTS 语句的复制(主从)
    18.4.1.10 伴随在Master和Slave上不同的表定义的复制(主从)
    18.4.1.11 复制和DIRECTORY表选项
    18.4.1.12 被调用功能的复制(主从)(被调用的复制(主从)功能?-)
    18.4.1.13 复制(主从)和浮点值
    18.4.1.14 复制(主从)和小数支持
    18.4.1.15 复制(主从)和清除(FLUSH)
    18.4.1.16 复制(主从)和系统函数
    18.4.1.17 复制(主从)和LIMIT
    18.4.1.18 复制(主从)和LOAD DATA INFILE
    18.4.1.19 复制(主从)和分区
    18.4.1.20 复制(主从)和REPAIR TABLE
    18.4.1.21 复制(主从)和Master Shutdown或Slave Shutdown
    18.4.1.22 复制(主从)和max_allowed_packet
    18.4.1.23 复制(主从)和MEMORY表
    18.4.1.24 复制(主从)和临时表
    18.4.1.25 mysql系统数据库的复制(主从)
    18.4.1.26 复制(主从)和查询优化器
    18.4.1.27 复制(主从)和保留字
    18.4.1.28 复制(主从)期间的Slave错误
    18.4.1.29 服务器端帮助表的复制(主从)(服务器端的复制(主从)帮助表?)
    18.4.1.30 复制(主从)和服务(器?)SQL模式
    18.4.1.31 复制(主从)重试和超时
    18.4.1.32 复制(主从)和时区
    18.4.1.33 复制(主从)和会话
    18.4.1.34 复制(主从)和会话的不一致性
    18.4.1.35 复制(主从)和触发器
    18.4.1.36 复制(主从)和TRUNCATE TABLE
    18.4.1.37 复制(主从)和用户名字长度
    18.4.1.38 复制(主从)和变量
    18.4.1.39 复制(主从)和视图
  18.4.2 MySQL版本间的兼容性问题
  18.4.3 更新一个复制(主从)设置
  18.4.4 复制(主从)疑难解答
  18.4.5 如何报告复制(主从)的bugs和问题

复制(主从)允许数据从一个MySQL数据库服务器(the matser)拷贝到一个或多个MySQL数据库(the slaves).复制(主从)默认是异步的;slaves不需要为了从master接收更新而永久(保持)和master(的)连接.依靠这个配置,你可以复制所有的数据库,指定的(被选择的)数据库,甚至是一个数据库中的某些表(被选择的表)

在MySQL中复制(主从)的优点包括:
a.横向扩展(水平扩展)-在多个slaves之间平摊负载来提高性能.在这种环境中,所有的writes和updats必须都发生在master服务器上.然而,Reads可以发生在一个或多个slaves服务器上.这个模型可以提高writes的性能(由于master服务器致力于updates),当显著地增加read的速度通过增加slaves服务器的数量.

b.数据安全-因为数据被复制到了slave上,并且slave可以停止复制过程(进程?),在没有corrupting(翻译为污染?)相应master服务器上的数据的情况下在slave服务器上运行backup
service(备份服务)是可能的.

c.分析-在master服务器上可以创建实时数据,当数据的分析可能发生在slave服务器上而不影响master服务器性能.

d.远距离数据分配-你可能使用复制(主从)来从远程地址创建一个本地的备份来用,而不必永久地访问master服务器.

关于如何在这样的情况下使用复制(主从)的信息,可以参考Section 18.3, "Replication
Solutions".(http://dev.mysql.com/doc/refman/5.7/en/replication-solutions.html)

MySQL 5.7支持不同的复制(主从)方法.传统的方法是基于来自master服务器binary
log(二进制日志)复制(主从)事件的,
